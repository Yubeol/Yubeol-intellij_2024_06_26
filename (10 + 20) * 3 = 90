package org.koreait;

import java.util.Arrays;
import java.util.stream.Collectors;

public class Calc {
    public static int run(String exp) {
        // 괄호 제거
        exp = exp.trim(); //양 옆의 쓸데없는 공백 제거
        exp = stripOuterBrackets(exp);
        // 단일항이 들어오면 바로 리턴
        if (!exp.contains(" ")) {
            return Integer.parseInt(exp);
        }
        boolean needToMulti = exp.contains(" * ");
        boolean needToPlus = exp.contains(" + ") || exp.contains(" - ");
        boolean needToSplit = exp.contains("(") || exp.contains(")");
        boolean needToCompound = needToMulti && needToPlus;

        if (needToSplit) {
            int BracketsCount = 0;
            int SplitPointIndex = -1;

            for (int i = 0; i < exp.length(); i++) {
                if (exp.charAt(i) == '(') {
                    BracketsCount++;
                } else if (exp.charAt(i) == ')') {
                    BracketsCount--;
                }
                if (BracketsCount == 0) {
                    SplitPointIndex = i;
                    break;
                }
            }
            String firstExp = exp.substring(0, SplitPointIndex + 1);
            String secondExp = exp.substring(SplitPointIndex + 4);

            char operator = exp.charAt(SplitPointIndex +2);

            exp = run(firstExp) + " " + operator + " " + run(secondExp);

            return run(exp);
        }

        else if (needToCompound) {
            String[] bits = exp.split(" \\+ ");
            String newExp = Arrays.stream(bits)
                    .mapToInt(Calc::run)
                    .mapToObj(e -> e + "")
                    .collect(Collectors.joining(" + "));
            return run(newExp);
        }
        else if (needToPlus) {
            exp = exp.replaceAll("- ", "+ -");
            String[] bits = exp.split(" \\+ ");
            int sum = 0;
            for (int i = 0; i < bits.length; i++) {
                sum += Integer.parseInt(bits[i]);
            }
            return sum;
        } else if (needToMulti) {
            String[] bits = exp.split(" \\* ");
            int sum = 1;
            for (int i = 0; i < bits.length; i++) {
                sum *= Integer.parseInt(bits[i]);
            }
            return sum;
        }
        throw new RuntimeException("해석 불가 : 올바른 계산식이 아니야");
    }

    private static String stripOuterBrackets(String exp) {
        int OuterBracketsCount = 0;

        while (exp.charAt(0) == '(' && exp.charAt(exp.length() - 1) == ')') {
            exp = exp.substring(1, exp.length() - 1);
        }
        if (OuterBracketsCount == 0) return exp;

        return exp.substring(0, OuterBracketsCount);
    }
}
